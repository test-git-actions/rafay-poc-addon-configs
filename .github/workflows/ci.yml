name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  JF_RT_URL: https://mgmresorts.jfrog.io
  JFROG_USERNAME: 'pkumar@mgmresorts.com'
  RT_REPO_VIRTUAL: 'rafay-poc-addon-configs-generic-dev-local'
  JFROG_CLI_LOG_LEVEL: 'DEBUG'
  BUILD_NAME: 'rafay-poc'
  BUILD_ID: "rafay-poc.$(date '+%Y-%m-%d-%H-%M')"
  RBv2_SIGNING_KEY: 'mgmkey'
  DISABLE_JOB_SUMMARY: false
  JF_ACCESS_TOKEN: ${{ secrets.JFROG_TOKEN }}
  JFROG_TOKEN: ${{ secrets.JFROG_TOKEN }}
  OIDC_PROVIDER_NAME: test-exploration-oidc

permissions:
  actions: read
  id-token: write
  packages: write
  contents: write
  security-events: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        id: setup-cli
        with:
          version: 2.71.0
          oidc-provider-name: ${{env.OIDC_PROVIDER_NAME}}
          disable-job-summary: false
        env:
          JF_URL: ${{env.JF_RT_URL}}
          JFROG_CLI_RELEASES_REPO: '${{ env.JF_RT_URL }}/artifactory/${{ env.RT_REPO_VIRTUAL}}' 
          JFROG_CLI_EXTRACTORS_REMOTE: '${{ env.JF_RT_URL }}/artifactory/${{ env.RT_REPO_VIRTUAL}}'
          JF_GIT_TOKEN: ${{ secrets.GH_PAT }}

      - name: Set the JFrog Token
        run: echo JFROG_TOKEN=${{ steps.setup-cli.outputs.oidc-token }} >> $GITHUB_ENV

      - name: List the files
        run: ls

      - name: Audit
        run: |
          jf audit --iac=true --format=table --extended-table=true --secrets=true --sast=true --sca=true --licenses=true --fail=false # >> $GITHUB_STEP_SUMMARY

      - name: Run JFrog Xray scan
        run: |
          jf scan ./external-dns ./haproxy-ingress ./nginx-ingress --fail=false --output ./xray-scan-report.json --extended-table=true --detailed-summary=true

      - name: JFrog Upload
        run: |
          cd ${{ github.workspace }}
          jf rt u --flat=false "{cert-manager/,external-dns/,haproxy-ingress/,nginx-ingress/}**" "$RT_REPO_VIRTUAL/"

        
      - name: Upload Xray Scan Results
        uses: actions/upload-artifact@v4
        with:
          name: xray-scan-report
          path: ./xray-scan-report.json

      # - name: ‚úÖ Run Checkov on YAMLs
      #   uses: bridgecrewio/checkov-action@v2
      #   with:
      #     directory: .
      #     quiet: true

      # - name: Check if SARIF report exists
      #   run: |
      #     if [ ! -f results.sarif ]; then
      #       echo "SARIF report not found, skipping upload"
      #       exit 0
      #     fi
      #     ls -l results.sarif
      #   continue-on-error: true

      # - name: Upload SARIF report as GitHub artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: checkov-scan-results
      #     path: results.sarif

      # - name: üîç Scan cert-manager addon
      #   uses: aquasecurity/trivy-action@0.28.0
      #   with:
      #     scan-type: config
      #     scan-ref: ./cert-manager
      #   continue-on-error: true

      # - name: üîç Scan external-dns addon
      #   uses: aquasecurity/trivy-action@0.28.0
      #   with:
      #     scan-type: config
      #     scan-ref: ./external-dns
      #   continue-on-error: true
