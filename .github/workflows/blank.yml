name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  JF_RT_URL: https://mgmresorts.jfrog.io
  JFROG_USERNAME: 'pkumar@mgmresorts.com'
  RT_REPO_VIRTUAL: 'rafay-poc-addon-configs-generic-dev-local'
  JFROG_CLI_LOG_LEVEL: 'ERROR'
  BUILD_NAME: 'rafay-poc'
  BUILD_ID: "rafay-poc.$(date '+%Y-%m-%d-%H-%M')"
  RBv2_SIGNING_KEY: 'mgmkey'
  DISABLE_JOB_SUMMARY: false
  JF_ACCESS_TOKEN: ${{ secrets.JFROG_TOKEN }}

permissions:
  actions: read # for detecting the Github Actions environment.
  id-token: write # for creating OIDC tokens for signing.
  packages: write # for uploading attestations.
  contents: write # to push updates while version bump and publish to repo, read is fine if there is just read operation‚Äã
  security-events: write # Required for uploading code scanning.
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        id: setup-cli
        with:
          version: 2.71.0
          disable-job-summary: false
        env:
          JF_URL: ${{env.JF_RT_URL}}
          # JFROG_CLI_RELEASES_REPO: '${{ env.JF_RT_URL }}/artifactory/${{ env.RT_REPO_VIRTUAL}}' 
          # JFROG_CLI_EXTRACTORS_REMOTE: '${{ env.JF_RT_URL }}/artifactory/${{ env.RT_REPO_VIRTUAL}}'
          # JF_GIT_TOKEN: ${{ secrets.GH_PAT }}
          JF_ACCESS_TOKEN: ${{ secrets.JFROG_TOKEN }}

      - name: Set the JFrog Token
        run: echo JFROG_TOKEN=${{ steps.setup-cli.outputs.oidc-token }} || ${{ secrets.JFROG_TOKEN }} >> $GITHUB_ENV

      - name: Check if JFROG_TOKEN is available
        run: |
          if [ -z "$JFROG_TOKEN" ]; then
            echo "Token is missing!"
            exit 1
          else
            echo "JFROG_TOKEN is present"
          fi

      - name: Configure JFrog CLI for Xray
        run: |
          echo $JFROG_TOKEN
          jf c add xray-server \
            --url=${{ env.JF_RT_URL }} \
            --access-token=${{ secrets.JFROG_TOKEN }} \
            --interactive=false

      - name: Run vulnerability scan on Rafay addon configs
        run: |
          jf scan \
            --watches "*" \                             # Use specific watch if configured
            --format json \                             # Use json for deeper output, or 'table' for human readable
            --fail=true \                               # Fail the job on issues (set false to just warn)
            --severity=medium,high,critical \           # Optional: scan only for these severity levels
            ./

      - name: Xray Scan
        run: |
          jf scan . --extended-table=true
        env:
          JF_URL: ${{ env.JF_RT_URL }}
          JF_ACCESS_TOKEN: ${{ env.JFROG_TOKEN }}

      # - name: üîç Scan Kubernetes YAMLs for misconfigurations
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     scan-type: config
      #     scan-ref: ./cert-manager/


